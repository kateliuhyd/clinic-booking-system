{"ast":null,"code":"var _jsxFileName = \"/Users/kateliu/clinic-booking-system/frontend/src/components/Prescriptions.js\",\n  _s = $RefreshSig$();\nimport { useAuth } from '../contexts/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport api from '../services/api';\nimport PrescriptionDetail from './PrescriptionDetail';\nimport './Prescriptions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prescriptions = () => {\n  _s();\n  const {\n    user,\n    loading: authLoading\n  } = useAuth();\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPrescription, setSelectedPrescription] = useState(null);\n  const [showDetail, setShowDetail] = useState(false);\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    const prescriptionId = searchParams.get('id');\n    if (prescriptionId) {\n      viewPrescriptionDetail(prescriptionId);\n    } else {\n      loadPrescriptions();\n    }\n  }, [searchParams]);\n  const loadPrescriptions = async () => {\n    try {\n      const response = await api.get('/prescriptions');\n      setPrescriptions(response.data.prescriptions);\n    } catch (error) {\n      console.error('Error loading prescriptions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle auth state before making API calls\n  if (authLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Checking authentication...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 27\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this);\n  const viewPrescriptionDetail = async prescriptionId => {\n    try {\n      const response = await api.get(`/prescriptions/${prescriptionId}`);\n      setSelectedPrescription(response.data.prescription);\n      setShowDetail(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to load prescription');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Prescriptions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading prescriptions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prescriptions-list\",\n      children: prescriptions.length > 0 ? prescriptions.map(presc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prescription-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: presc.diagnosis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"doctor\",\n          children: [\"Prescribed by: \", presc.doctor_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"department\",\n          children: presc.department_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: [\"Appointment: \", new Date(presc.appointment_date).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 87\n          }, this), \"Prescribed: \", new Date(presc.created_at).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewPrescriptionDetail(presc.prescription_id),\n          className: \"btn btn-primary\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, presc.prescription_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No prescriptions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), showDetail && selectedPrescription && /*#__PURE__*/_jsxDEV(PrescriptionDetail, {\n      prescription: selectedPrescription,\n      onClose: () => {\n        setShowDetail(false);\n        setSelectedPrescription(null);\n        loadPrescriptions();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Prescriptions, \"S9nsJz9HZrKLfo/vQVWWmbcrgho=\", false, function () {\n  return [useAuth, useSearchParams];\n});\n_c = Prescriptions;\nexport default Prescriptions;\nvar _c;\n$RefreshReg$(_c, \"Prescriptions\");","map":{"version":3,"names":["useAuth","Navigate","React","useState","useEffect","useSearchParams","api","PrescriptionDetail","jsxDEV","_jsxDEV","Prescriptions","_s","user","loading","authLoading","prescriptions","setPrescriptions","setLoading","selectedPrescription","setSelectedPrescription","showDetail","setShowDetail","searchParams","prescriptionId","get","viewPrescriptionDetail","loadPrescriptions","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","prescription","_error$response","_error$response$data","alert","className","length","map","presc","diagnosis","doctor_name","department_name","Date","appointment_date","toLocaleDateString","created_at","onClick","prescription_id","onClose","_c","$RefreshReg$"],"sources":["/Users/kateliu/clinic-booking-system/frontend/src/components/Prescriptions.js"],"sourcesContent":["import { useAuth } from '../contexts/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport api from '../services/api';\nimport PrescriptionDetail from './PrescriptionDetail';\nimport './Prescriptions.css';\n\nconst Prescriptions = () => {\n  const { user, loading: authLoading } = useAuth();\n  \n  const [prescriptions, setPrescriptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPrescription, setSelectedPrescription] = useState(null);\n  const [showDetail, setShowDetail] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const prescriptionId = searchParams.get('id');\n    if (prescriptionId) {\n      viewPrescriptionDetail(prescriptionId);\n    } else {\n      loadPrescriptions();\n    }\n  }, [searchParams]);\n\n  const loadPrescriptions = async () => {\n    try {\n      const response = await api.get('/prescriptions');\n      setPrescriptions(response.data.prescriptions);\n    } catch (error) {\n      console.error('Error loading prescriptions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Handle auth state before making API calls\n  if (authLoading) return <div>Checking authentication...</div>;\n  if (!user) return <Navigate to=\"/login\" replace />;\n\n\n  const viewPrescriptionDetail = async (prescriptionId) => {\n    try {\n      const response = await api.get(`/prescriptions/${prescriptionId}`);\n      setSelectedPrescription(response.data.prescription);\n      setShowDetail(true);\n    } catch (error) {\n      alert(error.response?.data?.error || 'Failed to load prescription');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>My Prescriptions</h2>\n      \n      {loading ? (\n        <div className=\"loading\">Loading prescriptions...</div>\n      ) : (\n        <div className=\"prescriptions-list\">\n          {prescriptions.length > 0 ? (\n            prescriptions.map(presc => (\n              <div key={presc.prescription_id} className=\"prescription-card\">\n                <h3>{presc.diagnosis}</h3>\n                <p className=\"doctor\">Prescribed by: {presc.doctor_name}</p>\n                <p className=\"department\">{presc.department_name}</p>\n                <p className=\"date\">\n                  Appointment: {new Date(presc.appointment_date).toLocaleDateString()}<br />\n                  Prescribed: {new Date(presc.created_at).toLocaleDateString()}\n                </p>\n                <button\n                  onClick={() => viewPrescriptionDetail(presc.prescription_id)}\n                  className=\"btn btn-primary\"\n                >\n                  View Details\n                </button>\n              </div>\n            ))\n          ) : (\n            <p>No prescriptions found</p>\n          )}\n        </div>\n      )}\n\n      {showDetail && selectedPrescription && (\n        <PrescriptionDetail\n          prescription={selectedPrescription}\n          onClose={() => {\n            setShowDetail(false);\n            setSelectedPrescription(null);\n            loadPrescriptions();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Prescriptions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}